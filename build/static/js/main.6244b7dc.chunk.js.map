{"version":3,"sources":["MapChart.js","index.js"],"names":["markers","countriesVisited","MapChart","react_default","a","createElement","index_umd","geography","_ref","geographies","map","geo","key","rsmKey","fill","includes","properties","ISO_A3","_ref2","name","coordinates","markerOffset","r","stroke","strokeWidth","textAnchor","y","style","fontFamily","App","_useState","useState","_useState2","Object","slicedToArray","setContent","src_MapChart","setTooltipContent","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yLAUMA,EAAU,GACVC,EAAmB,CAAC,MAAO,OAkClBC,EAjCE,WACb,OACIC,EAAAC,EAAAC,cAACC,EAAA,cAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,UAPV,0GAQE,SAAAC,GAAA,OAAAA,EAAGC,YACYC,IAAI,SAACC,GAEb,OACIR,EAAAC,EAAAC,cAACC,EAAA,UAAD,CACIM,IAAKD,EAAIE,OACTN,UAAWI,EACXG,KAAMb,EAAiBc,SAASJ,EAAIK,WAAWC,QAAU,UAAY,gBAMxFjB,EAAQU,IAAI,SAAAQ,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,YAAaC,EAAtBH,EAAsBG,aAAtB,OACTlB,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQM,IAAKO,EAAMC,YAAaA,GAC5BjB,EAAAC,EAAAC,cAAA,UAAQiB,EAAG,GAAIR,KAAK,OAAOS,OAAO,OAAOC,YAAa,IACtDrB,EAAAC,EAAAC,cAAA,QACIoB,WAAW,SACXC,EAAGL,EACHM,MAAO,CAAEC,WAAY,YAAad,KAAM,YAEvCK,QCjCzB,SAASU,IAAM,IAAAC,EACiBC,mBAAS,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGK,GADHH,EAAA,GAAAA,EAAA,IAEb,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+B,EAAD,CAAUC,kBAAmBF,KAMnC,IAAMG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOvC,EAAAC,EAAAC,cAACwB,EAAD,MAASS","file":"static/js/main.6244b7dc.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    ComposableMap,\n    Geographies,\n    Geography,\n    Marker\n} from \"react-simple-maps\";\n\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst markers = []\nconst countriesVisited = [\"NLD\", \"DEU\"]\nconst MapChart = () => {\n    return (\n        <ComposableMap>\n            <Geographies geography={geoUrl}>\n                {({ geographies }) =>\n                    geographies.map((geo) => {\n                        // console.log(geo);\n                        return (\n                            <Geography\n                                key={geo.rsmKey}\n                                geography={geo}\n                                fill={countriesVisited.includes(geo.properties.ISO_A3) ? '#FF5A00' : '#AEAEAE'}\n                            />\n                        );\n                    })\n                }\n            </Geographies>\n            {markers.map(({ name, coordinates, markerOffset }) => (\n                <Marker key={name} coordinates={coordinates}>\n                    <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2} />\n                    <text\n                        textAnchor=\"middle\"\n                        y={markerOffset}\n                        style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                    >\n                        {name}\n                    </text>\n                </Marker>\n            ))}\n        </ComposableMap>\n    );\n};\n\nexport default MapChart;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n  \n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}